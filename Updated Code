from random import choice
from turtle import *

from freegames import floor, vector

state = {'score': 0}
path = Turtle(visible=False) 
writer = Turtle(visible=False) 
aim = vector(0, 0)         #Set it from (5,0) -->(0,0) so pacman doesn't just start moving at the start without any inputs from the player J.H
pacman = vector(-140, -20) #Due to changing the height of the map from y (180-->240) (or 3 squares up) and the length of the map from x(-200)-->(-300) (10 squares to the left)
                           #pacman now spawns in a black tile so (-40,-80)-->(-140,-20) J.H

ghosts = [
    [vector(-280, 160), vector(10, 0)], #Due to shifting the map (-180,160)-->(-280,220)
    [vector(-280, -160), vector(0, 10)], #Same for this (-180,-160)-->(-280,-100)
    [vector(0, 220), vector(0, -10)],    # (100,160)-->(0,220)
    [vector(0, -100), vector(-10, 0)],   # (100,-160)-->(0,-100)
    [vector(140, -100), vector(0, 10)],
    [vector(280, 220), vector(0, -10)],
]
# fmt: off
tiles = [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,   #Making the Map 30x30 and also just adding more possible places to go to justify the increase J.H
    0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,   #The map has also been moved so that at tiles[0] (x,y)=(-200,180)-->(-300,240)
    0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1,    #These two changes makes the map appear 3 squares higher and 10 squares to the left J.H
    0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1,
    0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1,
    0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1,
    0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1,
    0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1,
    0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1,
    0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1,
    0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1,
    0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1,
    0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1,
    0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1,
    0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1,
    0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1,
    0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1,
    0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1,
    0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1,
    0, 1, 0, 2, 2, 2, 0, 2, 0, 2, 2, 2, 2, 0, 2, 0, 2, 0, 2, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1,
    0, 1, 0, 2, 0, 2, 0, 2, 0, 2, 0, 0, 0, 0, 2, 0, 2, 0, 2, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1,
    0, 1, 0, 2, 0, 2, 0, 2, 0, 2, 0, 0, 0, 0, 2, 0, 2, 0, 2, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1,
    0, 1, 0, 2, 0, 2, 0, 2, 0, 2, 2, 2, 2, 0, 2, 0, 2, 0, 2, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1,
    0, 1, 0, 2, 0, 2, 0, 2, 0, 2, 0, 0, 0, 0, 2, 0, 2, 0, 2, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1,
    0, 1, 0, 2, 0, 2, 0, 2, 0, 2, 0, 0, 0, 0, 2, 0, 2, 0, 2, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1,
    0, 1, 0, 2, 0, 2, 0, 2, 0, 2, 0, 0, 0, 0, 2, 0, 2, 0, 2, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1,
    0, 1, 0, 2, 0, 2, 2, 2, 0, 2, 2, 2, 2, 0, 2, 0, 2, 0, 2, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1,
    0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1,
    0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ]
# fmt: on


def square(x, y):
    """Draw square using path at (x, y)."""
    path.up()
    path.goto(x, y)
    path.down()
    path.begin_fill()

    for count in range(4): 
        path.forward(20)
        path.left(90)

    path.end_fill()


def offset(point): 
    """Return offset of point in tiles."""
    x = (floor(point.x, 20) + 300) / 20  #to make the map more centered we move x (200)-->(300) (moving the map 10 squares to the left) J.H
    y = (240 - floor(point.y, 20)) / 20  # Making the map three squares larger for visability so  y = ((180 - floor(point.y, 20)) / 20) --> (y = (240 - floor(point.y, 20)) / 20) J.H
    index = int(x + y * 30)               #Now that its 30x30 the first change in y is every 30 indexs so at index=0 its (x,y)=(-200,180) and at index=30 its (x,y)=(-200,160) J.H
    return index


def valid(point):
    """Return True if point is valid in tiles."""
    index = offset(point)

    if tiles[index] == 0:
        return False

    index = offset(point+19)
    
    if tiles[index] == 0:
        return False

    return point.x % 20 == 0 or point.y % 20 == 0


def world():
    """Draw world using path."""
    bgcolor('black')
    path.color('orange')

    for index in range(len(tiles)):
        tile = tiles[index] 

        if tile > 0:
            x = (index % 30) * 20 - 300  #To ajust that its now 30x30 changed (index %20)-->(index%30) 
                                         #AND to make the map more centered we move x (-200)-->(-300) (moving the map 10 squares to the left) J.H
            y = 240 - (index // 30) * 20 # Changed (index//20)-->(index//30) AND y changed from (180-->240) as to increase map by three squares upwords J.H
            square(x, y)

            if tile == 1:
                path.up()
                path.goto(x + 10, y + 10)
                path.dot(4, 'brown') #To increase visability dot size increased from (2)-->(4) J.H


def move():
    """Move pacman and all ghosts."""
    writer.undo()
    writer.write(state['score'])

    clear()

    if valid(pacman + aim): 
        pacman.move(aim)

    index = offset(pacman)

    if tiles[index] == 1:
        tiles[index] = 2
        state['score'] += 1
        x = (index % 30) * 20 - 300  #Now that it is (30x30) the x values change from 0-->30 NOT 0-->20 so (index%20)-->(index%30)
                                     #Also to make the map more centered we move x (-200)-->(-300) (moving the map 10 squares to the left J.H                                                                              
        y = 240 - (index // 30) * 20 #Its a (30x30) so the y values changes EVERY 30 indexs so (index//20)--->(index//30) J.H
                                     # y changed from (180-->240) to adjust for mapsize increase J.H
        square(x, y)

    up()
    goto(pacman.x + 10, pacman.y + 10)
    dot(20, 'purple')

    for point, course in ghosts:
        if valid(point + course):
            point.move(course)
        else:
            options = [
                vector(8, 0), 
                vector(-8, 0),
                vector(0, 8),
                vector(0, -8),
            ]
            plan = choice(options)
            course.x = plan.x
            course.y = plan.y

        up()
        goto(point.x + 10, point.y + 10)
        dot(20, 'green')

    update()

    for point, course in ghosts:
        if abs(pacman - point) < 20:
            return

    ontimer(move, 100)

def change(x, y):
    """Change pacman aim if valid."""
    if valid(pacman + vector(x, y)):
        aim.x = x
        aim.y = y
        
#def win(state['score']):
    #if state['score']==379:
        #for tiles 
        #writer.write('You win', False, align='center', font=('Times New Roman', '90', 'bold')) #Victory statement R.K


setup(1000, 1000, 370, 0)      #The window opens up to a 1000x1000 pixel screen instead of a 420x420 pixel screen   R.K
hideturtle()
tracer(False)
writer.up() #Hides the turtle for when it goes to write the score, as before it was just a giant blackline across the screen J.H
writer.goto(300, 300) #From map changes scoreboard would appear in the game window so (160,160)-->(300,300) this moves it out of the window J.H
writer.color('white')
writer.write(state['score'])
listen()

onkey(lambda: change(5, 0), 'Right') 
onkey(lambda: change(-5, 0), 'Left')
onkey(lambda: change(0, 5), 'Up')
onkey(lambda: change(0, -5), 'Down')
world()
move()
done() 
